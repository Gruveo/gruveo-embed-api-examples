# In a single instance environment, you must also modify the instance's security group to
# allow traffic on port 443. The following configuration file retrieves the security
# group's ID using an AWS CloudFormation function and adds a rule to it.
# Link : https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/https-singleinstance-docker.html
Resources:
  sslSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0

# Environment variables :
# ${DOMAIN}     : example.org
# ${EMAIL}      : user@example.org
container_commands:
  01_download_epel:
    command: "sudo amazon-linux-extras install epel -y"
  02_enable_epel:
    command: "sudo yum-config-manager --enable epel"
  03_update_yum:
    command: "sudo yum update -y --skip-broken"
  04_install_certbot:
    command: "sudo yum install -y certbot python2-certbot-nginx python2-pip || true"
  05_get_certificate:
    command: "sudo certbot certonly --manual \
      --preferred-challenges dns \
      --manual-auth-hook \"/home/ec2-user/letsencrypt/certbot_route53.sh UPSERT ${DOMAIN}\" \
      --manual-cleanup-hook \"/home/ec2-user/letsencrypt/certbot_route53.sh DELETE ${DOMAIN}\" \
      --debug \
      --non-interactive \
      --email ${EMAIL} \
      --agree-tos \
      -d ${DOMAIN} \
      --expand \
      --renew-with-new-domains \
      --keep-until-expiring \
      --post-hook \"sudo service nginx start\" \
      --pre-hook \"sudo service nginx stop\""
  06_link:
    command: "sudo ln -sf /etc/letsencrypt/live/${DOMAIN} /etc/letsencrypt/live/ebcert"
